#!/usr/bin/env node

const fs = require('fs')
const { promisify } = require('util')
const marked = require('marked')
const frontMatter = require('front-matter')
const escape = require('escape-html')
const imageSize = promisify(require('image-size'))

const baseUrl = 'https://photography.codejam.info/'

async function main () {
  const path = process.argv[2]

  const { attributes, body } = frontMatter(fs.readFileSync(path, 'utf8'))

  const md = body
    .split('\n')
    .map(line => {
      if (!line.match(/(^| )![^[ ]/)) {
        return line
      }

      const [prefix, ...rest] = line.split('!')
      const [pattern, caption] = rest.join('!').split('"')
      let [name, path] = pattern.replace(/^:?/, '').split(' ')
      const thumb = pattern.startsWith(':')
      const image = `/photos/${thumb ? 'thumb' : 'sd'}/${name}.jpg`

      path = path || `/photos/${name}.html`

      if (caption) {
        return `${prefix}[![${name}](${image})<br>*${caption}*](${path})`
      }

      return `${prefix}[![${name}](${image})](${path})`
    })
    .join('\n')

  const title = md.slice(0, md.indexOf('\n')).replace(/^# /, '').replace(/(<([^>]+)>)/g, '')

  let head = fs.readFileSync('head.html', 'utf8')
    .replace('<title>', `<title>${escape(title)}`)

  if (path === 'index.md') {
    head = head.replace('<body>', '<body class="home">')
  }

  let html = marked(md).replaceAll('.md"', '.html"')

  const refPattern = /src="\/([^"]*.jpg)"/g
  const refs = (html.match(refPattern) || []).map(ref => ref.slice('src="/'.length, -1))
  const sizeIndex = {}

  await Promise.all(refs.map(async ref => {
    sizeIndex[ref] = await imageSize(`dist/${ref}`)
  }))

  html = html.replace(refPattern, (match, ref) => {
    const { width, height } = sizeIndex[ref]
    return `src="/${ref}" width="${width}" height="${height}"`
  })

  if (path.startsWith('20')) {
    html = html.replace('<p>', '<p class="date">')
  }

  let metaTags = `  <meta property="og:title" content="${escape(title)}">\n`

  const image = attributes.image || refs[0]

  if (image) {
    const url = new URL(image, baseUrl).href

    metaTags += `  <meta property="og:image" content="${escape(url)}">
  <meta name="twitter:card" content="summary_large_image">
`
  }

  metaTags += `  <meta name="twitter:site" content="@valeriangalliat">
  <meta name="twitter:creator" content="@valeriangalliat">
`

  head = head.replace('</head>', `${metaTags}</head>`)

  process.stdout.write(head)
  process.stdout.write(html)
  process.stdout.write(fs.readFileSync('foot.html', 'utf8'))
}

main()

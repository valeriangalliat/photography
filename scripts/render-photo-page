#!/usr/bin/env node

const fs = require('fs')
const path = require('path')

const exif = JSON.parse(fs.readFileSync(process.argv[2], 'utf8'))
const name = path.basename(process.argv[2]).split('.')[0]
let style = ''

if (exif.ImageWidth / exif.ImageHeight > 16 / 9) {
  // Allow image to overflow for panoramas.
  style = 'style="max-width: none"'
}

const date = (exif.DateTimeOriginal || exif.FileModifyDate)
  .split('-')[0]
  .replace(':', '-')
  .replace(':', '-')
  .replace(' ', 'T')

const head = fs.readFileSync('head.html', 'utf8')
  .replace('<title>', `<title>ðŸ“· ${name}`)
  .replace('<body>', '<body class="photo">')

process.stdout.write(head.replace(
  '<div class="markdown-body">',
  `<div class="photo-container">
    <a href="/photos/full/${name}.jpg">
      <img src="/photos/hd/${name}.jpg"${style}>
    </a>
  </div>
  <div class="markdown-body">`))

process.stdout.write(`    <table>
      <tr>
        <th>Name</th>
        <td>${name}</td>
      </tr>
      <tr>
        <th>Date</th>
        <td>${date}</td>
      </tr>
      <tr>
        <th>Make</th>
        <td>${exif.Make}</td>
      </tr>
      <tr>
        <th>Model</th>
        <td>${exif.Model}</td>
      </tr>
      <tr>
        <th>Focal length</th>
        <td>${exif.FocalLength}</td>
      </tr>
      <tr>
        <th>Focal length (35 mm equivalent)</th>
        <td>${exif.FocalLengthIn35mmFormat}</td>
      </tr>
      <tr>
        <th>Aperture</th>
        <td>${exif.Aperture}</td>
      </tr>
      <tr>
        <th>Shutter speed</th>
        <td>${exif.ShutterSpeed}</td>
      </tr>
      <tr>
        <th>ISO</th>
        <td>${exif.ISO}</td>
      </tr>
    </table>
`)

process.stdout.write(fs.readFileSync('foot.html', 'utf8'))
